Arguments: (./philo + 4) + optional meaning 5/6
number_of_philosophers
time_to_die
time_to_eat
time_to_sleep
[number_of_times_each_philosopher_must_eat] (optional)

ALLOWED FUNCTIONS:
	memset, printf, malloc, free, write,
	usleep, gettimeofday, pthread_create,
	pthread_detach, pthread_join, pthread_mutex_init,
	pthread_mutex_destroy, pthread_mutex_lock,
	pthread_mutex_unlock

GLOBAL RULES:
	- The number of philosophers and also the number of forks.
	- time_to_die (ms): period of time they need to start eating since last time or start of simulation
	- time_to_eat (ms): The time it takes for a philosopher to eat (needs 2 forks)
	- time_to_sleep (ms): The time a philosopher will spend sleeping.
	- nbr_of_t_philo_must_eat (optional argument):
		if all philosophers eat this amout simulation stops, otherwise only when they die.
	- Each philosopher has a number ranging from 1 to number_of_philosophers.
	- Philosopher number 1 sits next to philosopher number number_of_philosophers. (N sits between N - 1 & N + 1)

IMPORTANT:
	- Each philosopher should be a |thread|.
	- To prevent philosophers from duplicating forks, protect the forks state with a |mutex|.
	- If there is only 1 philo there is only 1 fork, multiple filos, they have 1 on the right other left.

OVERVIEW:
There is a large bowl of spaghetti in the middle of a round table. 1 philo or multiple sit around
	- The philosophers alternatively eat, think, or sleep. (only one)
	- There are also forks on the table.
	- There are as many forks as philosophers.
	- A philosopher takes their right and their left forks to eat, one in each hand.
	- When finished eating, they put their forks back on the table and start sleeping, once awake, they start thinking again.
	- The simulation stops when a philosopher dies of starvation.
	- A displayed state message should not be mixed up with another message.
	- A message announcing death should be displayed no more than 10 ms after.
	- Philosophers should avoid dying!
	- Every philosopher needs to eat and should never starve.
	- Philosophers don’t speak with each other.
	- Philosophers don’t know if another philosopher is about to die.

STATE CHANGES:
◦ timestamp_in_ms X has taken a fork
◦ timestamp_in_ms X is eating
◦ timestamp_in_ms X is sleeping
◦ timestamp_in_ms X is thinking
◦ timestamp_in_ms X died

NOTE: Your program must not have any data races.

FIXES:
- Not accounting for optional argument
